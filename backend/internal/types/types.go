// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.2

package types

type AppVersion struct {
	Version  string `json:"version"`   // 版本号
	FileName string `json:"file_name"` // 完整文件名
}

type Application struct {
	Id               string          `json:"id"`                 // 应用唯一标识
	Name             string          `json:"name"`               // 应用名称
	DeployPath       string          `json:"deploy_path"`        // 部署路径
	StartCmd         string          `json:"start_cmd"`          // 启动命令
	StopCmd          string          `json:"stop_cmd"`           // 停止命令
	CurrentVersion   string          `json:"currentVersion"`     // 当前版本
	MachineCount     int             `json:"machine_count"`      // 机器总数量
	HealthCount      int             `json:"health_count"`       // 健康机器数量
	ErrorCount       int             `json:"error_count"`        // 异常机器数量
	AlertCount       int             `json:"alert_count"`        // 告警机器数量
	Machines         []Machine       `json:"machines"`           // 机器列表
	RollbackPolicy   *RollbackPolicy `json:"rollback_policy"`    // 回滚策略配置
	REDMetricsConfig *REDMetrics     `json:"red_metrics_config"` // RED指标配置
	CreatedAt        int64           `json:"created_at"`         // 创建时间戳
	UpdatedAt        int64           `json:"updated_at"`         // 更新时间戳
}

type CancelDeploymentReq struct {
	Id string `path:"id"` // 发布记录ID
}

type CancelDeploymentResp struct {
	Success bool `json:"success"` // 取消是否成功
}

type CancelNodeDeploymentReq struct {
	Id                string   `path:"id"`                  // 发布记录ID
	NodeDeploymentIds []string `json:"node_deployment_ids"` // 发布机器ID列表
}

type CancelNodeDeploymentResp struct {
	Success bool `json:"success"` // 取消是否成功
}

type CreateAppReq struct {
	Name             string          `json:"name"`                        // 应用名称
	DeployPath       string          `json:"deploy_path"`                 // 部署路径
	StartCmd         string          `json:"start_cmd"`                   // 启动命令
	StopCmd          string          `json:"stop_cmd"`                    // 停止命令
	RollbackPolicy   *RollbackPolicy `json:"rollback_policy,optional"`    // 回滚策略配置
	REDMetricsConfig *REDMetrics     `json:"red_metrics_config,optional"` // RED指标配置
}

type CreateAppResp struct {
	Id string `json:"id"` // 创建的应用ID
}

type CreateDeploymentReq struct {
	AppName        string `json:"app_name"`        // 应用名称
	PackageVersion string `json:"package_version"` // 包版本
	ConfigPath     string `json:"config_path"`     // 配置文件路径
	GrayStrategy   string `json:"gray_strategy"`   // 灰度策略
}

type CreateDeploymentResp struct {
	Id string `json:"id"` // 创建的发布记录ID
}

type CreateMachineReq struct {
	Name        string `json:"name"`        // 机器名称
	Ip          string `json:"ip"`          // IP地址
	Port        int    `json:"port"`        // SSH端口号
	Username    string `json:"username"`    // SSH用户名
	Password    string `json:"password"`    // SSH密码
	Description string `json:"description"` // 机器描述
}

type CreateMachineResp struct {
	Id string `json:"id"` // 创建的机器ID
}

type DeleteMachineReq struct {
	Id string `path:"id"` // 机器ID
}

type DeleteMachineResp struct {
	Success bool `json:"success"` // 删除是否成功
}

type DeployNodeDeploymentReq struct {
	Id                string   `path:"id"`                  // 发布记录ID
	NodeDeploymentIds []string `json:"node_deployment_ids"` // 发布机器ID列表
}

type DeployNodeDeploymentResp struct {
	Success bool `json:"success"` // 发布是否成功
}

type Deployment struct {
	Id              string           `json:"id"`               // 发布记录唯一标识
	AppName         string           `json:"app_name"`         // 应用名称
	Status          string           `json:"status"`           // 发布状态: pending-待发布, deploying-发布中, success-成功, failed-失败, rolled_back-已回滚
	PackageVersion  string           `json:"package_version"`  // 包版本
	ConfigPath      string           `json:"config_path"`      // 配置文件路径
	GrayStrategy    string           `json:"gray_strategy"`    // 灰度策略: canary-金丝雀发布, blue-green-蓝绿发布, all-全量发布
	NodeDeployments []NodeDeployment `json:"node_deployments"` // 发布机器列表
	CreatedAt       int64            `json:"created_at"`       // 创建时间戳
	UpdatedAt       int64            `json:"updated_at"`       // 更新时间戳
}

type GetAppDetailReq struct {
	Id string `path:"id"` // 应用ID
}

type GetAppDetailResp struct {
	Application Application `json:"application"` // 应用详情
}

type GetAppListReq struct {
	Page     int    `form:"page,default=1"`       // 页码，默认第1页
	PageSize int    `form:"page_size,default=10"` // 每页数量，默认10条
	Name     string `form:"name,optional"`        // 应用名称筛选，可选
}

type GetAppListResp struct {
	Apps     []Application `json:"apps"`      // 应用列表
	Total    int64         `json:"total"`     // 总数量
	Page     int           `json:"page"`      // 当前页码
	PageSize int           `json:"page_size"` // 每页数量
}

type GetAppVersionsReq struct {
	AppName string `form:"app_name"` // 应用名称
}

type GetAppVersionsResp struct {
	Versions []AppVersion `json:"versions"` // 版本列表，降序排列
}

type GetDeploymentDetailReq struct {
	Id string `path:"id"` // 发布记录ID
}

type GetDeploymentDetailResp struct {
	Deployment Deployment `json:"deployment"`       // 发布记录详情
	Report     *Report    `json:"report,omitempty"` // 诊断报告（可能为空）
}

type GetDeploymentListReq struct {
	Page     int    `form:"page,default=1"`       // 页码，默认第1页
	PageSize int    `form:"page_size,default=10"` // 每页数量，默认10条
	AppName  string `form:"app_name,optional"`    // 应用名称筛选，可选
	Status   string `form:"status,optional"`      // 发布状态筛选，可选
}

type GetDeploymentListResp struct {
	Deployments []Deployment `json:"deployments"` // 发布记录列表
	Total       int64        `json:"total"`       // 总数量
	Page        int          `json:"page"`        // 当前页码
	PageSize    int          `json:"page_size"`   // 每页数量
}

type GetMachineDetailReq struct {
	Id string `path:"id"` // 机器ID
}

type GetMachineDetailResp struct {
	Machine Machine `json:"machine"` // 机器详情
}

type GetMachineListReq struct {
	Page         int    `form:"page,default=1"`         // 页码，默认第1页
	PageSize     int    `form:"page_size,default=10"`   // 每页数量，默认10条
	Name         string `form:"name,optional"`          // 机器名称筛选，可选
	Ip           string `form:"ip,optional"`            // IP地址筛选，可选
	HealthStatus string `form:"health_status,optional"` // 健康状态筛选，可选
	ErrorStatus  string `form:"error_status,optional"`  // 异常状态筛选，可选
	AlertStatus  string `form:"alert_status,optional"`  // 告警状态筛选，可选
}

type GetMachineListResp struct {
	Machines []Machine `json:"machines"`  // 机器列表
	Total    int64     `json:"total"`     // 总数量
	Page     int       `json:"page"`      // 当前页码
	PageSize int       `json:"page_size"` // 每页数量
}

type HealthThreshold struct {
	RateMin        float64 `json:"rate_min"`         // 最低请求速率(req/s),低于此值告警
	ErrorRateMax   float64 `json:"error_rate_max"`   // 最大错误率(%),超过此值告警
	DurationP99Max float64 `json:"duration_p99_max"` // P99 响应时长上限(ms)
	DurationP95Max float64 `json:"duration_p95_max"` // P95 响应时长上限(ms)
}

type Machine struct {
	Id           string `json:"id"`            // 机器唯一标识
	Name         string `json:"name"`          // 机器名称
	Ip           string `json:"ip"`            // IP地址
	Port         int    `json:"port"`          // SSH端口号
	Username     string `json:"username"`      // SSH用户名
	Password     string `json:"password"`      // SSH密码
	Description  string `json:"description"`   // 机器描述
	HealthStatus string `json:"health_status"` // 健康状态: healthy-健康, unhealthy-不健康
	ErrorStatus  string `json:"error_status"`  // 异常状态: normal-正常, error-异常
	AlertStatus  string `json:"alert_status"`  // 告警状态: normal-正常, alert-告警
	CreatedAt    int64  `json:"created_at"`    // 创建时间戳
	UpdatedAt    int64  `json:"updated_at"`    // 更新时间戳
}

type MetricDefinition struct {
	MetricName  string            `json:"metric_name"` // Prometheus 指标名称
	PromQL      string            `json:"promql"`      // PromQL 查询语句
	Labels      map[string]string `json:"labels"`      // 指标标签过滤
	Description string            `json:"description"` // 指标描述
}

type NodeDeployment struct {
	Id               string `json:"id"`                 // 机器唯一标识
	Ip               string `json:"ip"`                 // IP地址
	NodeDeployStatus string `json:"node_deploy_status"` // 发布状态: pending-待发布, deploying-发布中, success-成功, failed-失败
	ReleaseLog       string `json:"release_log"`        // 发布日志
}

type PingReq struct {
}

type PingResp struct {
	Message string `json:"message"` // 响应消息
}

type PostAlertCallbackReq struct {
	Key          string            `json:"key"`
	Status       string            `json:"status"`
	Desc         string            `json:"desc,optional,omitempty"`
	StartsAt     string            `json:"startsAt"`
	ReceiveAt    string            `json:"receiveAt"`
	EndsAt       string            `json:"endsAt,optional,omitempty"`
	Severity     string            `json:"severity"`
	Alertname    string            `json:"alertname"`
	GeneratorURL string            `json:"generatorUrl"`
	NeedHandle   bool              `json:"needHandle,optional,omitempty"`
	IsEmergent   bool              `json:"isEmergent,optional,omitempty"`
	Labels       map[string]string `json:"labels,optional,omitempty"`
	Annotations  map[string]string `json:"annotations,optional,omitempty"` // 关键字看 description,节点访问中心成功率低于80% 当前触发值: 50%, 然后让 AI自动分析
	Type         int               `json:"type,,optional,omitempty"`
	Values       float64           `json:"values"`
}

type PrometheusAlert struct {
	Name        string            `json:"name"`        // 告警名称
	AlertExpr   string            `json:"alert_expr"`  // Prometheus PromQL 表达式
	Duration    string            `json:"duration"`    // 持续时长(如 "1m", "5m")
	Severity    string            `json:"severity"`    // 告警级别(critical, warning, info)
	Labels      map[string]string `json:"labels"`      // 自定义标签
	Annotations map[string]string `json:"annotations"` // 告警注解(描述信息)
}

type REDMetrics struct {
	Enabled         bool              `json:"enabled"`          // 是否启用 RED 监控
	RateMetric      *MetricDefinition `json:"rate_metric"`      // Rate - 请求速率
	ErrorMetric     *MetricDefinition `json:"error_metric"`     // Error - 错误率
	DurationMetric  *MetricDefinition `json:"duration_metric"`  // Duration - 响应时长
	HealthThreshold *HealthThreshold  `json:"health_threshold"` // 健康度阈值
}

type Report struct {
	Id           string `json:"id"`            // 报告唯一标识
	DeploymentId string `json:"deployment_id"` // 关联的部署ID
	Content      string `json:"content"`       // AI 生成的报告内容
	Status       string `json:"status"`        // 报告生成状态: generating-生成中, completed-生成完成, failed-生成失败
	CreatedAt    int64  `json:"created_at"`    // 创建时间戳
	UpdatedAt    int64  `json:"updated_at"`    // 更新时间戳
}

type RetryNodeDeploymentReq struct {
	Id                string   `path:"id"`                  // 发布记录ID
	NodeDeploymentIds []string `json:"node_deployment_ids"` // 发布机器ID列表
}

type RetryNodeDeploymentResp struct {
	Success bool `json:"success"` // 重试是否成功
}

type RollbackDeploymentReq struct {
	Id string `path:"id"` // 发布记录ID
}

type RollbackDeploymentResp struct {
	Success bool `json:"success"` // 回滚是否成功
}

type RollbackNodeDeploymentReq struct {
	Id                string   `path:"id"`                  // 发布记录ID
	NodeDeploymentIds []string `json:"node_deployment_ids"` // 发布机器ID列表
}

type RollbackNodeDeploymentResp struct {
	Success bool `json:"success"` // 回滚是否成功
}

type RollbackPolicy struct {
	Enabled       bool              `json:"enabled"`        // 是否启用自动回滚
	AlertRules    []PrometheusAlert `json:"alert_rules"`    // Prometheus 告警规则列表
	AutoRollback  bool              `json:"auto_rollback"`  // 是否自动执行回滚
	NotifyChannel string            `json:"notify_channel"` // 通知渠道(如webhook、钉钉、企业微信等)
}

type SkipNodeDeploymentReq struct {
	Id                string   `path:"id"`                  // 发布记录ID
	NodeDeploymentIds []string `json:"node_deployment_ids"` // 发布机器ID列表
}

type SkipNodeDeploymentResp struct {
	Success bool `json:"success"` // 跳过是否成功
}

type TestMachineConnectionReq struct {
	Id string `path:"id"` // 机器ID
}

type TestMachineConnectionResp struct {
	Success bool   `json:"success"` // 连接是否成功
	Message string `json:"message"` // 连接结果消息
}

type UpdateAppReq struct {
	Id               string          `json:"id"`                          // 应用ID
	Name             string          `json:"name"`                        // 应用名称
	DeployPath       string          `json:"deploy_path"`                 // 部署路径
	StartCmd         string          `json:"start_cmd"`                   // 启动命令
	StopCmd          string          `json:"stop_cmd"`                    // 停止命令
	MachineIds       []string        `json:"machine_ids"`                 // 关联的机器ID列表
	RollbackPolicy   *RollbackPolicy `json:"rollback_policy,optional"`    // 回滚策略配置
	REDMetricsConfig *REDMetrics     `json:"red_metrics_config,optional"` // RED指标配置
}

type UpdateAppResp struct {
	Success bool `json:"success"` // 更新是否成功
}

type UpdateDeploymentReq struct {
	Id             string `json:"id"`              // 发布记录ID
	AppName        string `json:"app_name"`        // 应用名称
	PackageVersion string `json:"package_version"` // 包版本
	ConfigPath     string `json:"config_path"`     // 配置文件路径
	GrayStrategy   string `json:"gray_strategy"`   // 灰度策略
}

type UpdateDeploymentResp struct {
	Success bool `json:"success"` // 更新是否成功
}

type UpdateMachineReq struct {
	Id          string `json:"id"`          // 机器ID
	Name        string `json:"name"`        // 机器名称
	Ip          string `json:"ip"`          // IP地址
	Port        int    `json:"port"`        // SSH端口号
	Username    string `json:"username"`    // SSH用户名
	Password    string `json:"password"`    // SSH密码
	Description string `json:"description"` // 机器描述
}

type UpdateMachineResp struct {
	Success bool `json:"success"` // 更新是否成功
}
